)
print(p)
sin_moon(1000, moonName="Earth")
sin_moon(10000, moonName="Earth")
sin_moon(100000, moonName="Earth")
sin_moon(1000000, moonName="Earth")
sin_moon(10000000, moonName="Earth")
sin_moon(50000, moonName="Earth")
sin_moon(55000, moonName="Earth")
abs(y)
ggplot(data = data.frame(x=seq(0,10)), mapping = aes(x=x)) + stat_function(fun=sin_moon, n=1000, args=c(moonName="Mercury")
)
ggplot(data = data.frame(x=seq(0,10)), mapping = aes(x=x)) + stat_function(fun=sin_moon, n=1000, args=c(moonName="Mercury"))
ggplot(data = data.frame(x=seq(0,10)), mapping = aes(x=x)) + stat_function(fun=sin_moon, n=1000, args=c(moonName="Mercury"))
ggplot(data = data.frame(x=seq(0,100)), mapping = aes(x=x)) + stat_function(fun=sin_moon, n=1000, args=c(moonName="Mercury"))
ggplot(data = data.frame(x=seq(0,1000)), mapping = aes(x=x)) + stat_function(fun=sin_moon, n=1000, args=c(moonName="Mercury"))
ggplot(data = data.frame(x=seq(0,1000)), mapping = aes(x=x)) + stat_function(fun=sin_moon, n=1000, args=c(moonName="Mercury", logY=F))
ggplot(data = data.frame(x=seq(0,1000)), mapping = aes(x=x)) + stat_function(fun=sin_moon, n=1000, args=c(moonName="Mercury", logY=T))
ggplot(data = data.frame(x=seq(0,1000)), mapping = aes(x=x)) + stat_function(fun=sin_moon, n=1000, args=c(moonName="Mercury", logY=T))  + stat_function(fun=sin_moon, n=1000, args=c(moonName="Earth", logY=T))
ggplot(data = data.frame(x=seq(0,10000)), mapping = aes(x=x)) + stat_function(fun=sin_moon, n=1000, args=c(moonName="Mercury", logY=T))  + stat_function(fun=sin_moon, n=1000, args=c(moonName="Earth", logY=T))
ggplot(data = data.frame(x=seq(0,10000)), mapping = aes(x=x)) + stat_function(fun=sin_moon, n=1000, args=c(moonName="Mercury", logY=T))  + stat_function(fun=sin_moon, n=1000, args=c(moonName="Jupiter", logY=T))
ggplot(data = data.frame(x=seq(0,100000)), mapping = aes(x=x)) + stat_function(fun=sin_moon, n=1000, args=c(moonName="Mercury", logY=T))  + stat_function(fun=sin_moon, n=1000, args=c(moonName="Jupiter", logY=T))
ggplot(data = data.frame(x=seq(0,50000)), mapping = aes(x=x)) + stat_function(fun=sin_moon, n=1000, args=c(moonName="Mercury", logY=T))  + stat_function(fun=sin_moon, n=1000, args=c(moonName="Jupiter", logY=T))
ggplot(data = data.frame(x=seq(0,50000)), mapping = aes(x=x)) + stat_function(fun=sin_moon, n=1000, args=c(moonName="Mercury", logY=T))  + stat_function(fun=sin_moon, n=1000, args=c(moonName="Jupiter", logY=T)) + coord_flip()
p <- ggplot(data = data.frame(x=seq(0,400000)), mapping = aes(x = x)) +
# geom_vline(xintercept =  seq(5,150, by = 5*pi)) +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Mercury"), size=growSize*0.2, color="peachpuff") +
geom_ribbon(min=-sunRad, max=sunRad, fill='white') +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Venus"), size=growSize*0.2, color="wheat1") +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Earth"), size=growSize*0.2, color="dodgerblue") +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Mars"), size=growSize*0.2, color="firebrick1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Jupiter"), size=growSize*0.3, color="orange1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Saturn"), size=growSize*0.3, color="lightgoldenrod1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Uranus"), size=growSize*0.4, color="plum1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Neptune"), size=growSize*0.4, color="skyblue") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Pluto"), size=growSize*0.5, color="darkorange") +
# geom_ribbon(min=-sunRad, max=sunRad, fill='black') +
# geom_hline(yintercept=-sunRad, color='black', size=1.2) +
# geom_hline(yintercept=sunRad, color='black', size=1.2) +
theme_void() + coord_flip() +
theme(
plot.background = element_rect(fill="black"),    # Background of the entire plot
panel.background = element_rect(fill="black")   # Background of plotting area
)
print(p)
p <- ggplot(data = data.frame(x=seq(0,400000)), mapping = aes(x = x)) +
# geom_vline(xintercept =  seq(5,150, by = 5*pi)) +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Mercury"), size=growSize*0.2, color="peachpuff") +
geom_ribbon(min=-log(sunRad), max=log(sunRad), fill='white') +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Venus"), size=growSize*0.2, color="wheat1") +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Earth"), size=growSize*0.2, color="dodgerblue") +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Mars"), size=growSize*0.2, color="firebrick1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Jupiter"), size=growSize*0.3, color="orange1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Saturn"), size=growSize*0.3, color="lightgoldenrod1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Uranus"), size=growSize*0.4, color="plum1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Neptune"), size=growSize*0.4, color="skyblue") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Pluto"), size=growSize*0.5, color="darkorange") +
# geom_ribbon(min=-sunRad, max=sunRad, fill='black') +
# geom_hline(yintercept=-sunRad, color='black', size=1.2) +
# geom_hline(yintercept=sunRad, color='black', size=1.2) +
theme_void() + coord_flip() +
theme(
plot.background = element_rect(fill="black"),    # Background of the entire plot
panel.background = element_rect(fill="black")   # Background of plotting area
)
print(p)
p <- ggplot(data = data.frame(x=seq(0,400000)), mapping = aes(x = x)) +
# geom_vline(xintercept =  seq(5,150, by = 5*pi)) +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Mercury"), size=growSize*0.2, color="peachpuff") +
geom_ribbon(min=-log(sunRad), max=log(sunRad), fill='white', alpha=0.3) +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Venus"), size=growSize*0.2, color="wheat1") +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Earth"), size=growSize*0.2, color="dodgerblue") +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Mars"), size=growSize*0.2, color="firebrick1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Jupiter"), size=growSize*0.3, color="orange1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Saturn"), size=growSize*0.3, color="lightgoldenrod1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Uranus"), size=growSize*0.4, color="plum1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Neptune"), size=growSize*0.4, color="skyblue") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Pluto"), size=growSize*0.5, color="darkorange") +
# geom_ribbon(min=-sunRad, max=sunRad, fill='black') +
# geom_hline(yintercept=-sunRad, color='black', size=1.2) +
# geom_hline(yintercept=sunRad, color='black', size=1.2) +
theme_void() + coord_flip() +
theme(
plot.background = element_rect(fill="black"),    # Background of the entire plot
panel.background = element_rect(fill="black")   # Background of plotting area
)
ggsave(plot = p, filename='planets_log.png', width = 156, height=266, units='mm', dpi=300)
# system('convert planets.png -channel RGB -negate planets_inverted.png')
system('./glow -a 2.5 -s 50 planets_log.png planets_log_glow.png')
print(p)
p <- ggplot(data = data.frame(x=seq(0,400000)), mapping = aes(x = x)) +
# geom_vline(xintercept =  seq(5,150, by = 5*pi)) +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Mercury"), size=growSize*0.2, color="peachpuff") +
# geom_ribbon(min=-log(sunRad), max=log(sunRad), fill='white', alpha=0.3) +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Venus"), size=growSize*0.2, color="wheat1") +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Earth"), size=growSize*0.2, color="dodgerblue") +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Mars"), size=growSize*0.2, color="firebrick1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Jupiter"), size=growSize*0.3, color="orange1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Saturn"), size=growSize*0.3, color="lightgoldenrod1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Uranus"), size=growSize*0.4, color="plum1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Neptune"), size=growSize*0.4, color="skyblue") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Pluto"), size=growSize*0.5, color="darkorange") +
# geom_ribbon(min=-sunRad, max=sunRad, fill='black') +
# geom_hline(yintercept=-sunRad, color='black', size=1.2) +
# geom_hline(yintercept=sunRad, color='black', size=1.2) +
theme_void() + coord_flip() +
theme(
plot.background = element_rect(fill="black"),    # Background of the entire plot
panel.background = element_rect(fill="black")   # Background of plotting area
)
ggsave(plot = p, filename='planets_log.png', width = 156, height=266, units='mm', dpi=300)
# system('convert planets.png -channel RGB -negate planets_inverted.png')
system('./glow -a 2.5 -s 50 planets_log.png planets_log_glow.png')
p <- ggplot(data = data.frame(x=seq(0,400000)), mapping = aes(x = x)) +
# geom_vline(xintercept =  seq(5,150, by = 5*pi)) +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Mercury"), size=growSize*0.1, color="peachpuff") +
# geom_ribbon(min=-log(sunRad), max=log(sunRad), fill='white', alpha=0.3) +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Venus"), size=growSize*0.1, color="wheat1") +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Earth"), size=growSize*0.1, color="dodgerblue") +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Mars"), size=growSize*0.2, color="firebrick1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Jupiter"), size=growSize*0.3, color="orange1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Saturn"), size=growSize*0.3, color="lightgoldenrod1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Uranus"), size=growSize*0.4, color="plum1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Neptune"), size=growSize*0.4, color="skyblue") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Pluto"), size=growSize*0.5, color="darkorange") +
# geom_ribbon(min=-sunRad, max=sunRad, fill='black') +
# geom_hline(yintercept=-sunRad, color='black', size=1.2) +
# geom_hline(yintercept=sunRad, color='black', size=1.2) +
theme_void() + coord_flip() +
theme(
plot.background = element_rect(fill="black"),    # Background of the entire plot
panel.background = element_rect(fill="black")   # Background of plotting area
)
ggsave(plot = p, filename='planets_log.png', width = 156, height=266, units='mm', dpi=300)
# system('convert planets.png -channel RGB -negate planets_inverted.png')
system('./glow -a 2.5 -s 50 planets_log.png planets_log_glow.png')
p <- ggplot(data = data.frame(x=seq(0,400000)), mapping = aes(x = x)) +
# geom_vline(xintercept =  seq(5,150, by = 5*pi)) +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Mercury"), size=growSize*0.01, color="peachpuff") +
# geom_ribbon(min=-log(sunRad), max=log(sunRad), fill='white', alpha=0.3) +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Venus"), size=growSize*0.01, color="wheat1") +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Earth"), size=growSize*0.1, color="dodgerblue") +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Mars"), size=growSize*0.2, color="firebrick1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Jupiter"), size=growSize*0.3, color="orange1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Saturn"), size=growSize*0.3, color="lightgoldenrod1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Uranus"), size=growSize*0.4, color="plum1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Neptune"), size=growSize*0.4, color="skyblue") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Pluto"), size=growSize*0.5, color="darkorange") +
# geom_ribbon(min=-sunRad, max=sunRad, fill='black') +
# geom_hline(yintercept=-sunRad, color='black', size=1.2) +
# geom_hline(yintercept=sunRad, color='black', size=1.2) +
theme_void() + coord_flip() +
theme(
plot.background = element_rect(fill="black"),    # Background of the entire plot
panel.background = element_rect(fill="black")   # Background of plotting area
)
ggsave(plot = p, filename='planets_log.png', width = 156, height=266, units='mm', dpi=300)
# system('convert planets.png -channel RGB -negate planets_inverted.png')
system('./glow -a 2.5 -s 50 planets_log.png planets_log_glow.png')
library(ggplot2)
library(plotly)
# library(rgl) # doesn't work with rstudio server
jupiterRad <- 71492  # radius of Jupiter (km): 71492
moons <- read.csv('galilean_moons.csv')
planets <- read.csv('planets.csv')
## first ggplot attempt
sin_moon <- function(x, moonName="Io", moonsDf=planets, logY=T) {
moon <- moonsDf[which(moonsDf$name == moonName),]
rad <- moon$mean_orbital_radius_km
period <- moon$orbital_period_days
y <- sign(runif(1)-0.5) * rad * sin(x / period + runif(1))
print(y)
if(logY) {
if(abs(y) < 1){
return(0)
}
y <- sign(y) * log(abs(y))
}
return(y)
}
sunRad <- planets[planets$name=="Sun","radius"]
## first ggplot attempt
sin_moon <- function(x, moonName="Io", moonsDf=planets, logY=T) {
moon <- moonsDf[which(moonsDf$name == moonName),]
rad <- moon$mean_orbital_radius_km
period <- moon$orbital_period_days
y <- sign(runif(1)-0.5) * rad * sin(x / period + runif(1))
print(y)
if(logY) {
if(abs(y) < 1){
return(NA)
}
y <- sign(y) * log(abs(y))
}
return(y)
}
p <- ggplot(data = data.frame(x=seq(0,400000)), mapping = aes(x = x)) +
# geom_vline(xintercept =  seq(5,150, by = 5*pi)) +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Mercury"), size=growSize*0.01, color="peachpuff") +
# geom_ribbon(min=-(sunRad), max=(sunRad), fill='white', alpha=0.3) +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Venus"), size=growSize*0.01, color="wheat1") +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Earth"), size=growSize*0.1, color="dodgerblue") +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Mars"), size=growSize*0.2, color="firebrick1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Jupiter"), size=growSize*0.3, color="orange1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Saturn"), size=growSize*0.3, color="lightgoldenrod1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Uranus"), size=growSize*0.4, color="plum1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Neptune"), size=growSize*0.4, color="skyblue") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Pluto"), size=growSize*0.5, color="darkorange") +
# geom_ribbon(min=-sunRad, max=sunRad, fill='black') +
# geom_hline(yintercept=-sunRad, color='black', size=1.2) +
# geom_hline(yintercept=sunRad, color='black', size=1.2) +
theme_void() + coord_flip() +
theme(
plot.background = element_rect(fill="black"),    # Background of the entire plot
panel.background = element_rect(fill="black")   # Background of plotting area
)
print(p)
ggplotly(p)
## first ggplot attempt
sin_moon <- function(x, moonName="Io", moonsDf=planets, logY=T) {
moon <- moonsDf[which(moonsDf$name == moonName),]
rad <- moon$mean_orbital_radius_km
period <- moon$orbital_period_days
y <- sign(runif(1)-0.5) * rad * sin(x / period + runif(1))
# print(y)
if(logY) {
if(abs(y) < 1){
return(NA)
}
y <- sign(y) * log(abs(y))
}
return(y)
}
sunRad <- planets[planets$name=="Sun","radius"]
# p <-
growSize <- 2
p <- ggplot(data = data.frame(x=seq(0,400000)), mapping = aes(x = x)) +
# geom_vline(xintercept =  seq(5,150, by = 5*pi)) +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Mercury"), size=growSize*0.01, color="peachpuff") +
# geom_ribbon(min=-(sunRad), max=(sunRad), fill='white', alpha=0.3) +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Venus"), size=growSize*0.01, color="wheat1") +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Earth"), size=growSize*0.1, color="dodgerblue") +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Mars"), size=growSize*0.2, color="firebrick1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Jupiter"), size=growSize*0.3, color="orange1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Saturn"), size=growSize*0.3, color="lightgoldenrod1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Uranus"), size=growSize*0.4, color="plum1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Neptune"), size=growSize*0.4, color="skyblue") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Pluto"), size=growSize*0.5, color="darkorange") +
# geom_ribbon(min=-sunRad, max=sunRad, fill='black') +
# geom_hline(yintercept=-sunRad, color='black', size=1.2) +
# geom_hline(yintercept=sunRad, color='black', size=1.2) +
theme_void() + coord_flip() +
theme(
plot.background = element_rect(fill="black"),    # Background of the entire plot
panel.background = element_rect(fill="black")   # Background of plotting area
)
print(p)
moon <- moonsDf[which(moonsDf$name == moonName),]
## first ggplot attempt
sin_moon <- function(x, moonName="Io", moonsDf=planets, logY=F) {
moon <- moonsDf[which(moonsDf$name == moonName),]
rad <- moon$mean_orbital_radius_km
period <- moon$orbital_period_days
y <- sign(runif(1)-0.5) * rad * sin(x / period + runif(1))
# print(y)
if(logY) {
if(abs(y) < 1){
return(NA)
}
y <- sign(y) * log(abs(y))
}
return(y)
}
sunRad <- planets[planets$name=="Sun","radius"]
# p <-
growSize <- 2
p <- ggplot(data = data.frame(x=seq(0,400000)), mapping = aes(x = x)) +
# geom_vline(xintercept =  seq(5,150, by = 5*pi)) +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Mercury"), size=growSize*0.01, color="peachpuff") +
# geom_ribbon(min=-(sunRad), max=(sunRad), fill='white', alpha=0.3) +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Venus"), size=growSize*0.01, color="wheat1") +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Earth"), size=growSize*0.1, color="dodgerblue") +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Mars"), size=growSize*0.2, color="firebrick1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Jupiter"), size=growSize*0.3, color="orange1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Saturn"), size=growSize*0.3, color="lightgoldenrod1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Uranus"), size=growSize*0.4, color="plum1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Neptune"), size=growSize*0.4, color="skyblue") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Pluto"), size=growSize*0.5, color="darkorange") +
# geom_ribbon(min=-sunRad, max=sunRad, fill='black') +
# geom_hline(yintercept=-sunRad, color='black', size=1.2) +
# geom_hline(yintercept=sunRad, color='black', size=1.2) +
theme_void() + coord_flip() +
theme(
plot.background = element_rect(fill="black"),    # Background of the entire plot
panel.background = element_rect(fill="black")   # Background of plotting area
)
print(p)
p <- ggplot(data = data.frame(x=seq(0,400000)), mapping = aes(x = x)) +
# geom_vline(xintercept =  seq(5,150, by = 5*pi)) +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Mercury"), size=growSize*0.01, color="peachpuff") +
# geom_ribbon(min=-(sunRad), max=(sunRad), fill='white', alpha=0.3) +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Venus"), size=growSize*0.01, color="wheat1") +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Earth"), size=growSize*0.1, color="dodgerblue") +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Mars"), size=growSize*0.2, color="firebrick1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Jupiter"), size=growSize*0.3, color="orange1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Saturn"), size=growSize*0.3, color="lightgoldenrod1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Uranus"), size=growSize*0.4, color="plum1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Neptune"), size=growSize*0.4, color="skyblue") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Pluto"), size=growSize*0.5, color="darkorange") +
# geom_ribbon(min=-sunRad, max=sunRad, fill='black') +
# geom_hline(yintercept=-sunRad, color='black', size=1.2) +
# geom_hline(yintercept=sunRad, color='black', size=1.2) +
theme_void() +
# coord_flip() +
theme(
plot.background = element_rect(fill="black"),    # Background of the entire plot
panel.background = element_rect(fill="black")   # Background of plotting area
)
print(p)
p <- ggplot(data = data.frame(x=seq(0,400000)), mapping = aes(x = x)) +
# geom_vline(xintercept =  seq(5,150, by = 5*pi)) +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Mercury"), size=growSize*0.1, color="peachpuff") +
# geom_ribbon(min=-(sunRad), max=(sunRad), fill='white', alpha=0.3) +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Venus"), size=growSize*0.1, color="wheat1") +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Earth"), size=growSize*0.1, color="dodgerblue") +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Mars"), size=growSize*0.2, color="firebrick1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Jupiter"), size=growSize*0.3, color="orange1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Saturn"), size=growSize*0.3, color="lightgoldenrod1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Uranus"), size=growSize*0.4, color="plum1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Neptune"), size=growSize*0.4, color="skyblue") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Pluto"), size=growSize*0.5, color="darkorange") +
# geom_ribbon(min=-sunRad, max=sunRad, fill='black') +
# geom_hline(yintercept=-sunRad, color='black', size=1.2) +
# geom_hline(yintercept=sunRad, color='black', size=1.2) +
theme_void() +
# coord_flip() +
theme(
plot.background = element_rect(fill="black"),    # Background of the entire plot
panel.background = element_rect(fill="black")   # Background of plotting area
)
p <- ggplot(data = data.frame(x=seq(0,400000)), mapping = aes(x = x)) +
# geom_vline(xintercept =  seq(5,150, by = 5*pi)) +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Mercury"), size=growSize*0.1, color="peachpuff") +
# geom_ribbon(min=-(sunRad), max=(sunRad), fill='white', alpha=0.3) +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Venus"), size=growSize*0.1, color="wheat1") +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Earth"), size=growSize*0.1, color="dodgerblue") +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Mars"), size=growSize*0.2, color="firebrick1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Jupiter"), size=growSize*0.3, color="orange1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Saturn"), size=growSize*0.3, color="lightgoldenrod1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Uranus"), size=growSize*0.4, color="plum1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Neptune"), size=growSize*0.4, color="skyblue") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Pluto"), size=growSize*0.5, color="darkorange") +
# geom_ribbon(min=-sunRad, max=sunRad, fill='black') +
# geom_hline(yintercept=-sunRad, color='black', size=1.2) +
# geom_hline(yintercept=sunRad, color='black', size=1.2) +
theme_void() +
# coord_flip() +
theme(
plot.background = element_rect(fill="black"),    # Background of the entire plot
panel.background = element_rect(fill="black")   # Background of plotting area
)
ggsave(plot = p, filename='planets_ls.png', width = 156, height=266, units='mm', dpi=300)
# system('convert planets.png -channel RGB -negate planets_inverted.png')
system('./glow -a 2.5 -s 50 planets_ls.png planets_ls_glow.png')
print(p)
p <- ggplot(data = data.frame(x=seq(0,400000)), mapping = aes(x = x)) +
# geom_vline(xintercept =  seq(5,150, by = 5*pi)) +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Mercury"), size=growSize*0.1, color="peachpuff") +
# geom_ribbon(min=-(sunRad), max=(sunRad), fill='white', alpha=0.3) +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Venus"), size=growSize*0.1, color="wheat1") +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Earth"), size=growSize*0.1, color="dodgerblue") +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Mars"), size=growSize*0.2, color="firebrick1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Jupiter"), size=growSize*0.3, color="orange1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Saturn"), size=growSize*0.3, color="lightgoldenrod1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Uranus"), size=growSize*0.4, color="plum1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Neptune"), size=growSize*0.4, color="skyblue") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Pluto"), size=growSize*0.5, color="darkorange") +
geom_ribbon(min=-sunRad, max=sunRad, fill='black') +
# geom_hline(yintercept=-sunRad, color='black', size=1.2) +
# geom_hline(yintercept=sunRad, color='black', size=1.2) +
theme_void() +
# coord_flip() +
theme(
plot.background = element_rect(fill="black"),    # Background of the entire plot
panel.background = element_rect(fill="black")   # Background of plotting area
)
ggsave(plot = p, filename='planets_ls.png', width = 156, height=266, units='mm', dpi=300)
# system('convert planets.png -channel RGB -negate planets_inverted.png')
system('./glow -a 2.5 -s 50 planets_ls.png planets_ls_glow.png')
print(p)
ggplotly(p)
1920/1080
ggsave(plot = p, filename='planets_ls.png', width = 2*1778, height=1000, units='mm', dpi=300)
ggsave(plot = p, filename='planets_ls.png', width = 2*177*2, height=200, units='mm', dpi=300)
# system('convert planets.png -channel RGB -negate planets_inverted.png')
system('./glow -a 2.5 -s 50 planets_ls.png planets_ls_glow.png')
p <- ggplot(data = data.frame(x=seq(0,400000)), mapping = aes(x = x)) +
# geom_vline(xintercept =  seq(5,150, by = 5*pi)) +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Mercury"), size=growSize*0.1, color="peachpuff") +
# geom_ribbon(min=-(sunRad), max=(sunRad), fill='white', alpha=0.3) +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Venus"), size=growSize*0.1, color="wheat1") +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Earth"), size=growSize*0.1, color="dodgerblue") +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Mars"), size=growSize*0.2, color="firebrick1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Jupiter"), size=growSize*0.3, color="orange1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Saturn"), size=growSize*0.3, color="lightgoldenrod1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Uranus"), size=growSize*0.4, color="plum1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Neptune"), size=growSize*0.4, color="skyblue") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Pluto"), size=growSize*0.5, color="darkorange") +
geom_ribbon(min=-sunRad, max=sunRad, fill='black') +
geom_hline(yintercept=-sunRad, color='black', size=0.3) +
geom_hline(yintercept=sunRad, color='black', size=0.3) +
theme_void() +
# coord_flip() +
theme(
plot.background = element_rect(fill="black"),    # Background of the entire plot
panel.background = element_rect(fill="black")   # Background of plotting area
)
ggsave(plot = p, filename='planets_ls.png', width = 2*177*2, height=200, units='mm', dpi=300)
moons
jupiterRad
2.634*2/71492
library(ggplot2)
library(plotly)
jupiterRad <- 71492  # radius of Jupiter (km): 71492
moons <- read.csv('galilean_moons.csv')
planets <- read.csv('planets.csv')
## first ggplot attempt
sin_moon <- function(x, moonName="Io", moonsDf=planets, logY=F) {
moon <- moonsDf[which(moonsDf$name == moonName),]
rad <- moon$mean_orbital_radius_km
period <- moon$orbital_period_days
y <- sign(runif(1)-0.5) * rad * sin(x / period + runif(1))
# print(y)
if(logY) {
if(abs(y) < 1){
return(NA)
}
y <- sign(y) * log(abs(y))
}
return(y)
}
sunRad <- planets[planets$name=="Sun","radius"]
# p <-
growSize <- 2
p <- ggplot(data = data.frame(x=seq(0,400000)), mapping = aes(x = x)) +
# geom_vline(xintercept =  seq(5,150, by = 5*pi)) +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Mercury"), size=growSize*0.1, color="peachpuff") +
# geom_ribbon(min=-(sunRad), max=(sunRad), fill='white', alpha=0.3) +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Venus"), size=growSize*0.1, color="wheat1") +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Earth"), size=growSize*0.1, color="dodgerblue") +
stat_function(fun = sin_moon, n = 5000, args = c(moonName="Mars"), size=growSize*0.2, color="firebrick1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Jupiter"), size=growSize*0.3, color="orange1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Saturn"), size=growSize*0.3, color="lightgoldenrod1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Uranus"), size=growSize*0.4, color="plum1") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Neptune"), size=growSize*0.4, color="skyblue") +
stat_function(fun = sin_moon, n = 1000, args = c(moonName="Pluto"), size=growSize*0.5, color="darkorange") +
geom_ribbon(min=-sunRad, max=sunRad, fill='black') +
geom_hline(yintercept=-sunRad, color='black', size=0.3) +
geom_hline(yintercept=sunRad, color='black', size=0.3) +
theme_void() +
# coord_flip() +
theme(
plot.background = element_rect(fill="black"),    # Background of the entire plot
panel.background = element_rect(fill="black")   # Background of plotting area
)
moons
15*1.769
157/26.535
moons$orbital_period_days
prod(moons$orbital_period_days)
prod(moons$orbital_period_days)/365.25
prod(moons$orbital_period_days)/365
prod(moons$orbital_period_days)/366
ymd("2019-04-08") + days(750)
library(lubridate)
ymd("2019-04-08") + days(750)
lcm <- function(x, y) {
# choose the greater number
if(x > y) {
greater = x
} else {
greater = y
}
while(TRUE) {
if((greater %% x == 0) && (greater %% y == 0)) {
lcm = greater
break
}
greater = greater + 1
}
return(lcm)
}
lcm(moons$orbital_period_days[1], moons$orbital_period_days[2])
lcm <- function(x, y) {
# choose the greater number
if(x > y) {
greater = x
} else {
greater = y
}
lcm=0
while(lcm <= x*y) {
if((greater %% x == 0) && (greater %% y == 0)) {
lcm = greater
break
}
greater = greater + 1
}
return(lcm)
}
lcm(moons$orbital_period_days[1], moons$orbital_period_days[2])
ymd("2017-12-18") + months(18)
